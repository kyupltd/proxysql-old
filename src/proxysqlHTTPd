#!/usr/bin/perl
{
package MyWebServer;

use Config::IniFiles;
use Proc::Daemon;
use Net::Server::PreFork;
use HTTP::Server::Simple::CGI;
use HTTP::Server::Simple::CGI::PreFork;
#use base qw(HTTP::Server::Simple::CGI);
use base qw(HTTP::Server::Simple::CGI::PreFork);
#use base qw(HTTP::Server);



my %dispatch = (
	'/test' => \&resp_test,
	# ...
);

sub handle_request {
	my $self = shift;
	my $cgi  = shift;
  
	my $path = $cgi->path_info();
	my $handler = $dispatch{$path};

	if (ref($handler) eq "CODE") {
		print "HTTP/1.0 200 OK\r\n";
		$handler->($cgi);
		
	} else {
		print "HTTP/1.0 404 Not found\r\n";
		print $cgi->header,
			  $cgi->start_html('Not found'),
			  $cgi->h1('Not found'),
			  $cgi->end_html;
	}
}

sub resp_test {
	my $cgi  = shift;   # CGI.pm object
	return if !ref $cgi;
	
	my $val1 = $cgi->param('param1');
	
	print $cgi->header,
		  $cgi->start_html("Test Page"),
		  $cgi->h1("Test page, param1 = $val1!"),
		  $cgi->end_html;
}

} 



my $num_args = $#ARGV + 1;
#if ($num_args != 1) {
#	print "\nUsage: ./proxysqlHTTPd configfile\n";
#	exit 0;
#}


## open the config file passed as argument
my $inicfg;
$inicfg=Config::IniFiles->new( -file => $ARGV[0] ) || die "Could not open config file";
#$inicfg=Config::IniFiles->new( -file => "proxysql.cnf" ) || die "Could not open config file";


my $datadir;
$datadir=$inicfg->val( "http", "datadir");
if (length($datadir)==0) { $datadir=$inicfg->val( "global", "datadir"); }

my $pidfile;
$pidfile=$inicfg->val( "http", "pid_file");
if (length($pidfile)==0) { $pidfile="proxysqlHTTPd.pid"; }

my $errorlog;
$errorlog=$inicfg->val( "http", "error_log");
if (length($errorlog)==0) { $errorlog="proxysqlHTTPd.log"; }

my $port;
$port=$inicfg->val( "http", "port");
if (length($port)==0) { $port="8080"; }



my $daemon = Proc::Daemon->new(
	work_dir => $datadir,
	child_STDOUT => ">>$errorlog",
	child_STDERR => ">>$errorlog",
	pid_file => $pidfile,
);

my $pidd=$daemon->Init();
if ($pidd>0) {
	exit 0;
}
#my $ppid=$daemon->Init();
print "datadir = $datadir , pidfile = $pidfile , errorlog = $errorlog , port = $port\n";
#my $pid = MyWebServer->new($port)->background();
#my $pid = MyWebServer->new($port)->run();




#MyWebServer->new($port)->run();
#print "Use 'kill $pid' to stop server.\n";
#exit 0;


my $server = MyWebServer->new($port);
#$server::Prefork
#$server->net_server(user => "nobody" , group => "nobody" , min_spare_servers => 8, max_servers => 10);
#$server->net_server(PreFork);
#$server->prefork(4);
#$server::Simple::CGI->run(prefork=>1);
#$server->run(prefork=>1);
$server->run(ipv =>4 , prefork=>1 , user => "nobody" , group => "nogroup", min_spare_servers => 8, min_servers => 8, max_servers => 20);

